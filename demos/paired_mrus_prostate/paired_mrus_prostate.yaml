dataset:
  train:
    dir:
      - demos/paired_mrus_prostate/dataset/part00
      - demos/paired_mrus_prostate/dataset/part01
      - demos/paired_mrus_prostate/dataset/part02
      - demos/paired_mrus_prostate/dataset/part03
      - demos/paired_mrus_prostate/dataset/part04
      - demos/paired_mrus_prostate/dataset/part05
      - demos/paired_mrus_prostate/dataset/part06
      - demos/paired_mrus_prostate/dataset/part07
    format: nifti
    labeled: true
  valid:
    dir:
      - demos/paired_mrus_prostate/dataset/part08
    format: nifti
    labeled: true
  test:
    dir:
      - demos/paired_mrus_prostate/dataset/part09
      - demos/paired_mrus_prostate/dataset/part10
    format: nifti
    labeled: true
  type: paired
  moving_image_shape: [69, 69, 64]
  fixed_image_shape: [47, 63, 44]
train:
  # define neural network structure
  method: "ddf" # the registration method, value should be ddf / dvf / conditional
  backbone:
    name: "local" # value should be local / global / unet
    num_channel_initial: 16 # number of initial channel in local net, controls the size of the network
    extract_levels: [0, 1, 2, 3]

  # define the loss function for training
  loss:
    image:
      name: "ssd"
      weight: 0
    label:
      weight: 1.0
      name: "dice"
      scales: [0, 1, 2, 4, 8, 16]
    regularization:
      weight: 0.125 # weight of regularization loss
      name: "bending" # options include "bending", "gradient"

  # define the optimizer
  optimizer:
    name: "Adam"
    learning_rate: 1.0e-5

  # define the hyper-parameters for preprocessing
  preprocess:
    data_augmentation:
      name: "affine"
    batch_size: 4
    shuffle_buffer_num_batch: 1 # shuffle_buffer_size = batch_size * shuffle_buffer_num_batch

  # other training hyper-parameters
  epochs: 5000 # number of training epochs
  save_period: 1000 # the model will be saved every `save_period` epochs.
